//
   Created by rajagopalan on 11/30/14.
doctype html
html(lang="en")
    head
        meta(charset="utf-8")
        title Human Anatomy - Heart Viewer
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        meta(name="description", content="")
        meta(name="author", content="")
        // Styles
        link(href="stylesheets/bootstrap.css", rel="stylesheet")
        link(href="stylesheets/makemodels.css", rel="stylesheet")
        link(href="stylesheets/fontello.css", type="text/css", rel="stylesheet")
        //if lt IE 7
          link(href="stylesheets/fontello-ie7.css", type="text/css", rel="stylesheet")
        // Google Web fonts
        link(href="http://fonts.googleapis.com/css?family=Quattrocento:400,700", rel="stylesheet", type="text/css")
        link(href="http://fonts.googleapis.com/css?family=Patua+One", rel="stylesheet", type="text/css")
        link(href="http://fonts.googleapis.com/css?family=Open+Sans", rel="stylesheet", type="text/css")
        link(href="stylesheets/bootstrap-responsive.css", rel="stylesheet")
        // JQuery
        script(type="text/javascript", src="javascripts/jquery.js")
        // Load ScrollTo
        script(type="text/javascript", src="javascripts/jquery.scrollTo-1.4.2-min.js")
        // Load LocalScroll
        script(type="text/javascript", src="javascripts/jquery.localscroll-1.2.7-min.js")
        // prettyPhoto Initialization
        script(type="text/javascript", charset="utf-8").
            $(document).ready(function() {
            $("#login").show();
            $("#signup").hide();
            });


    body
        // NavBar
        .navbar-wrapper
            .navbar.navbar-inverse.navbar-fixed-top
                .navbar-inner
                    .container
                        a.btn.btn-navbar(data-toggle="collapse", data-target=".nav-collapse")
                            span.icon-bar
                            span.icon-bar
                            span.icon-bar
                        h1.brand
                            a(href="home") HumanAnatomy
                        nav.pull-right.nav-collapse.collapse
                            ul#menu-main.nav
                                li
                                    a(title="viewmodels", href="viewmodels") View Models
                                li
                                    a(title="makemodels", href="makemodels") Body Browser
                                li
                                    a(title="bodybrowser", href="bodybrowser") Make Notes
                                li
                                    a(title="logout", href="index") Logout
        #top
        // Main View
        section#contentwrap
            .container
                h1#headline Heart 3D Model

        #info(align="center")
            OBJ Heart
        hr
        // Footer
        section#footer
            footer
                p &#160;&#169; 2014 HumanAnatomy.
        script(type="text/javascript", src="javascripts/bootstrap.js")
        script(type="text/javascript").
            function divToggle(arg1, arg2) {
            document.getElementById(arg1).style.display = 'block';
            document.getElementById(arg2).style.display = 'none';
            }
        script(src="http://threejs.org/build/three.min.js")
        script(src="javascripts/OBJLoader.js")
        script(src="javascripts/Detector.js")
        script(src="http://threejs.org/examples/js/libs/stats.min.js")
        script(type="text/javascript").
            var clock = new THREE.Clock();
            var delta = clock.getDelta(); // seconds.
            var rotateAngle = Math.PI / 2 * delta;   // pi/2 radians (90 degrees) per second
            var container, stats;
            var obj;
            var camera, scene, renderer;
            var mouseX = 0, mouseY = 0;
            var windowHalfX = window.innerWidth / 2;
            var windowHalfY = window.innerHeight / 2;
            init();
            animate();
            function init() {
            container = document.createElement( 'div' );
            container.width="500";
            container.height="500";
            document.body.appendChild( container );
            innerWidth="500";
            innerHeight="500";
            container.backgroundColor="Blue";
            container.align="center";
            //container.background="FFF";
            console.log(innerWidth+container.backgroundColor);
            camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );
            camera.position.z = 600;
            // scene
            scene = new THREE.Scene();
            scene.backgroundColor="Blue";
            var ambient = new THREE.AmbientLight( 0x101030 );
            scene.add( ambient );
            var directionalLight = new THREE.DirectionalLight( 0xffeedd );
            directionalLight.position.set( 0, 0, 1 );
            scene.add( directionalLight );
            // texture
            var manager = new THREE.LoadingManager();
            manager.onProgress = function ( item, loaded, total ) {
            console.log( item, loaded, total );
            };
            // model
            var loader = new THREE.OBJLoader( manager );
            loader.load( 'models/heart.obj', function ( object ) {
            object.traverse( function ( child ) {
            if ( child instanceof THREE.Mesh ) {
            //child.material.map = texture;
            }
            } );
            object.position.x = - 60;
            object.rotation.x = 20* Math.PI / 180;
            object.rotation.z = 20* Math.PI / 180;
            object.scale.x = 3;
            object.scale.y = 3;
            object.scale.z = 3;
            obj = object;
            scene.add( obj );
            } );
            renderer = new THREE.WebGLRenderer();
            //renderer = new THREE.WebGLRenderer({ alpha: true });
            renderer.setSize( window.innerWidth, window.innerHeight );
            container.appendChild( renderer.domElement );
            //renderer.setClearColor( 0xffffff, 1);
            document.addEventListener( 'mousemove', onDocumentMouseMove, false );
            window.addEventListener( 'resize', onWindowResize, false );
            }
            function onWindowResize() {
            windowHalfX = window.innerWidth / 2;
            windowHalfY = window.innerHeight / 2;
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize( window.innerWidth, window.innerHeight );
            }
            function onDocumentMouseMove( event ) {
            mouseX = ( event.clientX - windowHalfX ) / 2;
            mouseY = ( event.clientY - windowHalfY ) / 2;
            }
            function animate() {
            requestAnimationFrame( animate );
            render();
            }
            function render() {
            obj.rotation.x += (0.2*(Math.PI / 180));
            obj.rotation.x %=360;
            camera.position.x += ( mouseX - camera.position.x ) * .05;
            camera.position.y += ( - mouseY - camera.position.y ) * .05;
            camera.backgroundColor="Blue";
            camera.lookAt( scene.position );
            renderer.render( scene, camera );
            }